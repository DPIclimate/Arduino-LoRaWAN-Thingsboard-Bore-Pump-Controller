{
  "alias": "timer_display_2",
  "name": "Timer Display 2",
  "descriptor": {
    "type": "latest",
    "sizeX": 4.5,
    "sizeY": 3,
    "resources": [],
    "templateHtml": "<form>\n    <div class=\"box\">\n        <div class=\"timer-display\" id=\"timer-display\">\n\n        </div>\n    </div>\n</form>",
    "templateCss": ".timer-display{\n    text-align: center;\n    font-family: Arial, Helvetica, sans-serif;\n    font-weight: bold;\n    font-size: 30px;\n}",
    "controllerScript": "let $scope;\nlet dataArray;\nlet attributeService;\nlet types;\n\n// Runs on initiation of the Widget\nself.onInit = function() {\n    // Setup as per the default widgets for updating server attributes\n    $scope = self.ctx.$scope;\n    attributeService = $scope.$injector.get(\n        'attributeService');\n    types = $scope.$injector.get('types');\n};\n\n// When the server attribute is updated, update thw widget\nself.onDataUpdated = function() {\n    var timer = minsToTime(self.ctx.data[0].data[0][1]);\n    document.getElementById(\"timer-display\").innerHTML = timer;\n    \n}\n\nfunction minsToTime(duration) {\n  var minutes = Math.round(duration % 60),\n    hours = Math.floor(duration /  60);\n\n  hours = (hours < 10) ? \"0\" + hours : hours;\n  minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n\n  return hours + \"h \" + minutes + \"m \"\n}\n\n",
    "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"EntitiesTableSettings2\",\n        \"properties\": {\n            \"widgetTitle\": {\n                \"title\": \"Widget title\",\n                \"type\": \"string\",\n                \"default\": \"\"\n            },\n            \"showLabel\":{\n                \"title\":\"Show label\",\n                \"type\":\"boolean\",\n                \"default\":true\n            },\n            \"labelValue\": {\n                \"title\": \"Label\",\n                \"type\": \"string\",\n                \"default\": \"\"\n            },\n            \"requiredErrorMessage\": {\n                \"title\": \"'Required' error message\",\n                \"type\": \"string\",\n                \"default\": \"\"\n            },\n            \"maxValue\": {\n                \"title\": \"Max value\",\n                \"type\": \"number\",\n                \"default\": \"\"\n            },\n            \"minValue\": {\n                \"title\": \"Min value\",\n                \"type\": \"number\",\n                \"default\": \"\"\n            },\n            \"showResultMessage\":{\n                \"title\":\"Show result message\",\n                \"type\":\"boolean\",\n                \"default\":true\n            }\n        },\n        \"required\": []\n    },\n    \"form\": [\n        \"widgetTitle\",\n        \"showResultMessage\",\n        \"showLabel\",\n        \"labelValue\",\n        \"requiredErrorMessage\",\n        \"maxValue\",\n        \"minValue\"\n    ]\n}",
    "dataKeySettingsSchema": "{}\n",
    "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = Math.floor(Math.random()*3)+3;\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"showResultMessage\":true,\"showLabel\":true},\"title\":\"Timer Display 2\",\"dropShadow\":true,\"enableFullscreen\":false,\"widgetStyle\":{},\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"useDashboardTimewindow\":true,\"showLegend\":false,\"actions\":{},\"showTitleIcon\":false,\"titleIcon\":\"more_horiz\",\"iconColor\":\"rgba(0, 0, 0, 0.87)\",\"iconSize\":\"24px\",\"titleTooltip\":\"\",\"displayTimewindow\":true}"
  }
}