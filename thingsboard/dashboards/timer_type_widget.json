{
  "alias": "timer_type_widget",
  "name": "Timer Type Widget",
  "descriptor": {
    "type": "latest",
    "sizeX": 4.5,
    "sizeY": 3,
    "resources": [],
    "templateHtml": "<form>\n    <div class=\"box\">\n        <select class=\"select-css\" id=\"timer-type\">\n            <option value=\"1\">Est.\n                Fill Timer\n            </option>\n            <option value=\"2\">Custom\n                Timer\n            </option>\n            <option value=\"0\">No\n                Timer</option>\n        </select>\n    </div>\n</form>",
    "templateCss": ".attribute-update-form {\n    overflow: hidden;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.entity-title {\n    font-weight: bold;\n    font-size: 16px;\n    padding-top: 12px;\n    padding-bottom: 6px;\n    color: #666;\n}\n\n.attribute-update-form__grid {\n    display: flex;\n}\n.grid__element:first-child {\n    flex: 1;\n}\n.grid__element:last-child {\n    margin-top: 19px;\n    margin-left: 7px;\n}\n.grid__element {\n    display: flex;\n}\n\n.attribute-update-form .md-button.md-icon-button {\n    margin: 0;\n}\n\n.attribute-update-form .md-button.md-icon-button {\n    width: 32px;\n    min-width: 32px;\n    height: 32px;\n    min-height: 32px;\n    padding: 0 !important;\n    margin: 0 !important;\n    line-height: 20px;\n}\n\n.attribute-update-form .md-icon-button md-icon {\n    width: 20px;\n    min-width: 20px;\n    height: 20px;\n    min-height: 20px;\n    font-size: 16px;\n}\n\n.show-label label {\n    display: block;\n}\n\nlabel {\n    display: none;\n}\n\n\n.select-css {\n    display: block;\n    font-size: 16px;\n    color: #444;\n    line-height: 1.3;\n    padding: .6em 1.4em .5em .8em;\n    width: 100%;\n    max-width: 100%; /* useful when width is set to anything other than 100% */\n    box-sizing: border-box;\n    margin: 0;\n    border: 1px solid #aaa;\n    box-shadow: 0 1px 0 1px rgba(0,0,0,.04);\n    border-radius: .5em;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    appearance: none;\n    background-color: #fff;\n    /* note: bg image below uses 2 urls. The first is an svg data uri for the arrow icon, and the second is the gradient. \n        for the icon, if you want to change the color, be sure to use `%23` instead of `#`, since it's a url. You can also swap in a different svg icon or an external image reference\n        \n    */\n    background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),\n      linear-gradient(to bottom, #ffffff 0%,#e5e5e5 100%);\n    background-repeat: no-repeat, repeat;\n    /* arrow icon position (1em from the right, 50% vertical) , then gradient position*/\n    background-position: right .7em top 50%, 0 0;\n    /* icon size, then gradient */\n    background-size: .65em auto, 100%;\n}\n/* Hide arrow icon in IE browsers */\n.select-css::-ms-expand {\n    display: none;\n}\n/* Hover style */\n.select-css:hover {\n    border-color: #888;\n}\n/* Focus style */\n.select-css:focus {\n    border-color: #aaa;\n    /* It'd be nice to use -webkit-focus-ring-color here but it doesn't work on box-shadow */\n    box-shadow: 0 0 1px 3px rgba(59, 153, 252, .7);\n    box-shadow: 0 0 0 3px -moz-mac-focusring;\n    color: #222; \n    outline: none;\n}\n\n/* Set options to normal weight\n.select-css option {\n    font-weight:normal;\n}\n*/\n/* Support for rtl text, explicit support for Arabic and Hebrew */\n*[dir=\"rtl\"] .select-css, :root:lang(ar) .select-css, :root:lang(iw) .select-css {\n    background-position: left .7em top 50%, 0 0;\n    padding: .6em .8em .5em 1.4em;\n}\n\n/* Disabled styles */\n.select-css:disabled, .select-css[aria-disabled=true] {\n    color: graytext;\n    background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22graytext%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),\n      linear-gradient(to bottom, #ffffff 0%,#e5e5e5 100%);\n}\n\n.select-css:disabled:hover, .select-css[aria-disabled=true] {\n    border-color: #aaa;\n}\n\n\nbody {\n  margin: 2rem;\n}",
    "controllerScript": "let $scope;\nlet dataArray;\nlet attributeService;\nlet types;\n\n// Runs on initiation of the Widget\nself.onInit = function() {\n    // Setup as per the default widgets for updating server attributes\n    $scope = self.ctx.$scope;\n    attributeService = $scope.$injector.get(\n        'attributeService');\n    types = $scope.$injector.get('types');\n    \n    // Add onChange function to the select box\n    document.getElementById(\"timer-type\")\n        .addEventListener(\"change\", updateAttribute);\n};\n\n// When the server attribute is updated, update thw widget\nself.onDataUpdated = function() {\n    document.getElementById(\"timer-type\").value = self\n        .ctx.data[0].data[0][1];\n}\n\n// When the widget is updated, send the updated value to the server attribute.\nfunction updateAttribute() {\n    var datasource = self.ctx.datasources[0];\n    attributeService.saveEntityAttributes(\n        datasource.entityType,\n        datasource.entityId,\n        types.attributesScope.server.value,\n        [{\n            key: datasource.dataKeys[0].name,\n            value: document.getElementById(\n                \"timer-type\").value\n        }]\n    )\n}",
    "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"TimerTypeSettings\",\n        \"properties\": {\n            \"widgetTitle\": {\n                \"title\": \"Timer Type Widget\",\n                \"type\": \"string\",\n                \"default\": \"\"\n            }\n        },\n        \"required\": []\n    },\n    \"form\": [\n        \"widgetTitle\"\n    ]\n}",
    "dataKeySettingsSchema": "{}\n",
    "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = Math.floor(Math.random()*3)+3;\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"showResultMessage\":true,\"showLabel\":true},\"title\":\"Timer Type Widget\",\"dropShadow\":true,\"enableFullscreen\":false,\"widgetStyle\":{},\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"useDashboardTimewindow\":true,\"showLegend\":false,\"actions\":{},\"showTitleIcon\":false,\"titleIcon\":\"more_horiz\",\"iconColor\":\"rgba(0, 0, 0, 0.87)\",\"iconSize\":\"24px\",\"titleTooltip\":\"\",\"displayTimewindow\":true}"
  }
}